---
- hosts:
    - all
  gather_facts: false
  vars_files:
    - "vars-common.yml"
#    - "version_files.yml"
  vars:
    - greenplum_admin_user: "gpadmin"
  tasks:
    - name: "Create $PXF_CONF Directory and Others"
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: "{{ greenplum_admin_user }}"
        group: "{{ greenplum_admin_user }}"
      with_items:
        - "{{ pxf_conf }}"
        - "{{ pxf_conf }}/conf"
        - "{{ pxf_conf }}/servers/default"
        - "{{ pxf_conf }}/servers/s3"
        - "{{ pxf_conf }}/servers/h500"
        - "{{ pxf_conf }}/servers/x410"

    - name: "Set default core-site.xml for PXF-HDFS"
      template:
        src: "../templates/core-site.xml.j2"
        dest: "{{ item }}"
        owner: "{{ greenplum_admin_user }}"
        group: "{{ greenplum_admin_user }}"
        mode: '0644'
        backup: yes
      with_items:
        - "{{ pxf_conf }}/servers/default/core-site.xml"
        - "/etc/hadoop/conf/core-site.xml"

    - name: "Set s3-site.xml for PXF-S3"
      template:
        src: "../templates/s3-site.xml.j2"
        dest: "{{ pxf_conf }}/servers/default/s3-site.xml"
        owner: "{{ greenplum_admin_user }}"
        group: "{{ greenplum_admin_user }}"
        mode: '0644'
        backup: yes

    - name: "Set core-site.xml for PXF-h500"
      template:
        src: "../templates/core-site-h500.xml.j2"
        dest: "{{ item }}"
        owner: "{{ greenplum_admin_user }}"
        group: "{{ greenplum_admin_user }}"
        mode: '0644'
        backup: yes
      with_items:
        - "{{ pxf_conf }}/servers/h500/core-site.xml"

    - name: "Set core-site.xml for PXF-x410"
      template:
        src: "../templates/core-site-x410.xml.j2"
        dest: "{{ item }}"
        owner: "{{ greenplum_admin_user }}"
        group: "{{ greenplum_admin_user }}"
        mode: '0644'
        backup: yes
      with_items:
        - "{{ pxf_conf }}/servers/x410/core-site.xml"

    - name: "Set pxf-env.sh for USER Permissions"
      template:
        src: "../templates/pxf-env.sh.j2"
        dest: "{{ pxf_conf }}/conf/pxf-env.sh"
        owner: "{{ greenplum_admin_user }}"
        group: "{{ greenplum_admin_user }}"
        mode: '0644'
        backup: yes

    - name: "Check '/usr/local/greenplum-pxf' exists"
      stat:
        path: /usr/local/greenplum-pxf
      register: pxf

    - name: "Initializing PXF on All Hosts of Cluster"
      shell: "{{ pxf_home }}/bin/pxf cluster init true"
      become: yes
      become_method: su
      become_user: "{{ greenplum_admin_user }}"
      become_flags: "-l"
      ignore_errors: yes
      when: inventory_hostname in groups['gpdb-mdw'] and pxf.stat.exists

    - name: "Sync PXF on All Hosts of Cluster"
      shell: "{{ pxf_home }}/bin/pxf cluster sync"
      become: yes
      become_method: su
      become_user: "{{ greenplum_admin_user }}"
      become_flags: "-l"
      when: inventory_hostname in groups['gpdb-mdw'] and pxf.stat.exists

    - name: "Check PXF Server Running Status"
      shell: "{{ pxf_home }}/bin/pxf cluster status"
      become: yes
      become_method: su
      become_user: "{{ greenplum_admin_user }}"
      become_flags: "-l"
      ignore_errors: yes
      register: pxf_status
      when: inventory_hostname in groups['gpdb-mdw']
      failed_when: "pxf_status.rc > 2"

    - name: "Starting PXF Server on All Hosts of Cluster"
#      vars:
#        _sdw_host_count: "{{ groups['gpdb-sdw'] | length }}"
#        _check_string: "PXF is running on {{ _sdw_host_count }} out of {{ _sdw_host_count }} hosts"
      shell: "{{ pxf_home }}/bin/pxf cluster start"
      become: yes
      become_method: su
      become_user: "{{ greenplum_admin_user }}"
      become_flags: "-l"
      when: inventory_hostname in groups['gpdb-mdw'] and pxf.stat.exists
#      when: inventory_hostname in groups['yygpdb-mdw'] and (_check_string not in _check_pxf_server_status.stdout)
